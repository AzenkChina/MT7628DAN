#!/bin/sh /etc/rc.common
# Copyright (C) 2020 Azenk

START=99
STOP=10

DYNAMICCFGFILE="/tmp/gather.conf"
DYNAMICCRONFILE="/tmp/crond.conf"

ser2net_default() {
	local cfg="$1"
	local key val speed="9600" databits="8" stopbits="0" parity="None"

	for key in speed databits stopbits parity; do
		config_get val "$cfg" "$key"
		[ -n "$val" ] || continue
		case "$key" in
			speed) speed=$val ;;
			databits) databits=$val ;;
			stopbits) stopbits=$val ;;
			parity) parity=$val ;;
			*)
		esac
	done

	case "$stopbits" in
		1) stopbits=0 ;;
		2) stopbits=2 ;;
		*)
	esac

	case "$parity" in
		none) parity="None" ;;
		even) parity="Even" ;;
		odd) parity="Odd" ;;
		*)
	esac

	echo "device=/dev/ttyS1:$speed:$databits$parity$stopbits"

	echo
}

collector_globals() {
	local cfg="$1"
	local key val level="0"

	for key in client logical physical mode level password ekey akey; do
		config_get val "$cfg" "$key"
		[ -n "$val" ] || continue
		case "$key" in
			level) level=$val ;;
			*) echo "$key=$val"
		esac
	done

	case "$level" in
		none) echo "level=0" ;;
		low) echo "level=1" ;;
		high) echo "level=5" ;;
		*)
	esac

	echo
}

collector_element() {
	local cfg="$1"
	local key val class obis index

	for key in class obis index; do
		config_get val "$cfg" "$key"
		[ -n "$val" ] || return 1
		case "$key" in
			class) class=$val ;;
			obis) obis=$val ;;
			index) index=$val ;;
			*)
		esac
	done

	echo "element=$class $obis $index"

	echo
}

start_service() {
	local enabled

	killall crond
	crontab -r
	sync

	config_load collector

	config_get_bool enabled globals enabled 0
	[ "$enabled" -gt 0 ] || return 0

	cat << EOF > "$DYNAMICCFGFILE"

#
# Following part is auto-generated from UCI settings in /etc/config/collector & /etc/config/ser2net
#

EOF

	config_load ser2net
	config_foreach ser2net_default default >> "$DYNAMICCFGFILE"

	config_load collector
	config_foreach collector_globals globals >> "$DYNAMICCFGFILE"
	config_foreach collector_element element >> "$DYNAMICCFGFILE"

	echo "* * * * * /usr/bin/gatherd" > "$DYNAMICCRONFILE"
	crontab "$DYNAMICCRONFILE"
	rm -f "$DYNAMICCRONFILE"
	crond
}

start() {
	start_service
	sync
}

stop() {
	killall crond
        crontab -r
	sync
}

restart() {
        stop
	start
}
